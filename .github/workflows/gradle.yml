name: "Java CI"
on:
  push:
    branches:
      - '[3-9]+.[0-9]+.x'
  pull_request:
    branches:
      - '[3-9]+.[0-9]+.x'
  workflow_dispatch:
jobs:
  build:
    name: "Build Project"
    runs-on: ubuntu-latest
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4
      - name: "☕️ Setup JDK"
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: liberica
      - name: "🐘 Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: "🔨 Build project"
        id: build
        run: ./gradlew build
  publish:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: 'build'
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4
      - name: "☕️ Setup JDK"
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: liberica
      - name: "🐘 Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: "📤 Publish Snapshot version to Artifactory (repo.grails.org)"
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: ./gradlew publish
      - name: "📖 Generate Snapshot Documentation"
        if: success()
        id: docs
        run: ./gradlew groovydoc
      - name: "📤 Publish Snapshot Documentation to Github Pages"
        if: steps.docs.outcome == 'success'
        uses: micronaut-projects/github-pages-deploy-action@grails
        env:
          BRANCH: gh-pages
          COMMIT_EMAIL: 'grails-build@users.noreply.github.com'
          COMMIT_NAME: 'grails-build'
          DOC_FOLDER: gh-pages
          FOLDER: build/docs/api
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
