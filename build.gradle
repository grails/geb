buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
    }
}

version projectVersion
group "org.grails.plugins"

apply plugin: 'java-library'
apply plugin: 'java-test-fixtures'
apply plugin: 'org.grails.grails-plugin'
apply plugin: 'org.grails.internal.grails-plugin-publish'
apply plugin: 'maven-publish'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    documentation.extendsFrom compileClasspath
}

dependencies {
    compileOnly "org.grails:grails-core:$grailsVersion" // Provided as this is a Grails plugin
    compileOnly "jakarta.servlet:jakarta.servlet-api:$servletApiVersion" // Provided by the servlet container

    // These are used transitively by the tests generated by the 'create-functional-test' script
    // If they are not included as api, the generated tests will not compile without adding the dependencies manually
    api "org.gebish:geb-spock:$gebSpock"
    api "org.grails:grails-testing-support:$testingSupportVersion"
    api "org.grails:grails-datastore-gorm:$datastoreVersion"

    testFixturesCompileOnly "jakarta.servlet:jakarta.servlet-api:$servletApiVersion"
    testFixturesApi "org.testcontainers:selenium:$testcontainersVersion"
    testFixturesApi "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testFixturesApi "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"

    documentation "org.apache.groovy:groovy:$groovyVersion"
    documentation "org.apache.groovy:groovy-ant:$groovyVersion"
    documentation "org.apache.groovy:groovy-templates:$groovyVersion"
    documentation "com.github.javaparser:javaparser-core:$javaParserCoreVersion"
}

grailsPublish {
    userOrg = 'grails'
    githubSlug = 'grails/geb'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails Geb Plugin"
    desc = "Provides Integration with Geb for Functional Testing"
    developers = [
        graemerocher: 'Graeme Rocher',
        puneetbehl: 'Puneet Behl',
        sbglasius: 'SÃ¸ren Berg Glasius',
        matrei: 'Mattias Reichel'
    ]
}

tasks.withType(Groovydoc).configureEach {
    destinationDir = layout.buildDirectory.dir('docs/api').get().asFile
    docTitle = "Grails Geb Plugin ${version}"
    classpath = configurations.documentation
}

tasks.withType(GroovyCompile).configureEach {
    groovyOptions.forkOptions.jvmArgs = ['-Xmx1024m']
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
        showExceptions true
        exceptionFormat 'full'
        showCauses true
        showStackTraces true
    }
}

tasks.named('bootJar').configure { enabled = false }
tasks.named('bootRun').configure { enabled = false }
tasks.named('bootTestRun').configure { enabled = false }